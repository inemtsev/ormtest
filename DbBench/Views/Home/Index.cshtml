@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET MVC Read/Write Test</h1>
    <p class="lead" id="chart-container" style="display:none"><canvas id="testChart" width="400" height="400"></canvas></p>
    <p>Number of reads/inserts: <input id="num-read" type="text"/></p>
    <p><a href="#" class="btn btn-primary btn-lg">Run Tests &raquo;</a></p>
</div>

@section scripts{
    <script>
        $(function() {
            $('.btn-primary.btn-lg').on('click', function() {
                var ormArray = ["Entity Framework 6.1.3", "Dapper 1.4.2", "ADO.NET (SqlDataReader)"]; //Entity=0, Dapper=1, ADO.NET=2
                var readResults = [];
                var writeResults = [];

                insertToDbUsing(0);

                function readDbUsing(dbType) {
                    //First, test the reads
                    $.ajax({
                        url: "http://localhost:53777/Home/ReadEntries?numberOfReads=" + $('#num-read').val() + "&ormType=" + dbType,
                        dataType: "json",
                        contentType: "application/json",
                        cache: false
                    }).done(function (result) {
                        readResults.push(result.time);
                        dbType++;
                        if (dbType > ormArray.length - 1) {
                            drawGraph();
                            return;
                        }

                        readDbUsing(dbType);
                    });
                }

                function insertToDbUsing(dbType) {
                    $.ajax({
                        url: "http://localhost:53777/Home/InsertEntries?numberOfInserts=" + $('#num-read').val() + "&ormType=" + dbType,
                        dataType: "json",
                        contentType: "application/json",
                        cache: false
                    }).done(function (result) {
                        writeResults.push(result.time);
                        dbType++;
                        if (dbType > ormArray.length - 1) {
                            readDbUsing(0);
                            return;
                        }

                        insertToDbUsing(dbType);
                    });
                }

                function drawGraph() {
                    var data = {
                        labels: ormArray,
                        datasets: [
                            {
                                label: "Read",
                                fillColor: "rgba(220,220,220,0.5)",
                                strokeColor: "rgba(220,220,220,0.8)",
                                highlightFill: "rgba(220,220,220,0.75)",
                                highlightStroke: "rgba(220,220,220,1)",
                                data: [readResults[0], readResults[1], readResults[2]]
                            },
                            {
                                label: "Write",
                                fillColor: "rgba(151,187,205,0.5)",
                                strokeColor: "rgba(151,187,205,0.8)",
                                highlightFill: "rgba(151,187,205,0.75)",
                                highlightStroke: "rgba(151,187,205,1)",
                                data: [writeResults[0], writeResults[1], writeResults[2]]
                            }
                        ]
                    };

                    $('#chart-container').show();
                    console.log(data.datasets);
                    var resultChart = $("#testChart").get(0).getContext("2d");
                    var newChart = new Chart(resultChart).Bar(data, { multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>" });
                }

            });

        });


    </script>
}